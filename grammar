statement      → return | decl | devalued
return         → "return" expression ";"
decl           → "let" IDENT "=" expression ";"
devalued       → expression ";"

expression     → if

if             → "if" "(" equality ")" block
if             → equality

equality       → comparison ( "!=" | "==" ) equality 
comparison     → term ( ">" | ">=" | "<" | "<=") comparison 

term           → factor ( "-" | "+" ) term 
factor         → unary ( "/" | "*" ) factor

unary          → ( "!" | "-" ) unary
unary          → primary

primary        → terminal
primary        → "(" expression ")"
primary        → block

terminal       → NUMBER | STRING | "true" | "false" | "nil" | IDENT
block          → "{" (statement)* (expression)? "}"